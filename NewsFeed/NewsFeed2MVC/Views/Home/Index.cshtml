@model NewsFeed2MVC.ViewModel.NewsViewModel

@{
    ViewData["Title"] = "NewsFeed";
}
<span>
    <div style="color: black; float: left; font-size: 48px; font-weight: bold">News</div>
    <div style="font-weight: bold; color: magenta; font-size: 48px">Feed</div></span>

<br>
<h2><span style="color: magenta">Populære Nyheder</span></h2>
<div>

    @foreach (var item in Model.News)
    {
        <ul style="padding: 0; margin: 0; list-style: none">
            <li>
                <div style="border-bottom: 1px solid magenta;"></div>
                <div style="font-weight: bold">@item.Title</div>
                <div style="font-style: italic; font-size: 10px">Forfatter @item.Author, sidst opdateret: @item.UpdatedDate</div>
                <br> @item.Content
                <div>
                    @{
                        string[] listOfTags = @item.HashTags.Split(';');

                        foreach (var tag in listOfTags)
                        {
                            <li style="background: none repeat scroll 0 0 #e4e4e4; color: #888; display: block; float: left; border-bottom: none !important; font-size: 13px; line-height: 12px; margin: 0 2px 2px 0; padding: 12px 17px;"><a href="#">@tag</a></li>
                        }
                    }
                </div>
                <br>

            </li>
            <br>
        </ul>
    }
</div>


<br/>
<form>
    Start Date:<br />
    <input type="date" id="StartDate" asp-for="StartDate"><br />
    End Date:<br />
    <input type="date" id="EndDate" asp-for="EndDate"><br />
    <input value="Show News" type="Submit" />
</form>
    @await Component.InvokeAsync("DateIntervalNews", new { startDateInput = Model.StartDate, endDateInput = Model.EndDate});

